# For more info see /usr/local/share/skhd/examples/skhdrc

# WIP: attempting regolith/i3wm equivalence
#
# Not Working
#   fn - arrows
#   focus spaces (SIP?)
#
# Mod = fn
# possible alternatives:
#   Alt
#   Control, since CapsLock can be Control

# Unicode and Hex Keyboard symbols
# ⌘ – &#x2318; – &#8984; – the Command Key symbol
# ⌥ – &#x2325; – &#8997; – the Option Key symbol
# ⇧ – &#x21E7; – &#8679; – the Shift Key (really just an outline up-arrow, not Mac-specific)
# 
# ⇥ – &#x21E5; – &#8677; – the Tab Key symbol
# ⏎ – &#x23CE; – &#9166; – the Return Key symbol
# ⌫ – &#x232B; – &#9003; – the Delete Key symbol

# ## <Category> // <Action> // <Keybinding> ##

# Not supported/possible?
# ## Modify // Load Window Layout // <fn> . ##
# ## Modify // Save Window Layout // <fn> , ##
# ## Modify // Move to Scratchpad // <fn><control> m ##
# ## Navigate // Scratchpad // <fn><control> a ##
# ## Modify // Toggle Bar // <fn> i ##
# ## Modify // Tile/Float Focus Toggle // <fn><shift> t ##
# ## Launch // Command // <fn><shift> space ##

# Not worked out yet
# ## Modify // Move Space to Display 1..n // <fn>?? - 1..n ##
# ## Navigate // Window by Name // <fn><control> space ##
#   TODO use yabai -m query 

# Handled by native macos stuff, can't be remapped(?)
## Launch // Application // <⌘> space ##
## Launch // File Search // <⌘><⌥> space ##
## Launch // Notification Viewer // <control><⌥><⌘> n ##

## Modify // Window Layout Mode // <fn> t ##
fn - t : yabai -m space --layout "$([ "$(yabai -m query --spaces --space | jq '.type')" = '"bsp"' ] && echo float || echo bsp)"

## Modify // Next Window Orientation // <fn><shift> delete ##
fn + shift - 0x75 : yabai -m space --rotate 90 # fn - delete = 0x75

## Modify // Bluetooth Settings // <fn> b ##
fn - b : osascript -e 'tell application "System Preferences"' -e 'activate' -e 'set current pane to pane "com.apple.preferences.Bluetooth"' -e 'end tell'

## Modify // Display Settings // <fn> d ##
fn - d : osascript -e 'tell application "System Preferences"' -e 'activate' -e 'set current pane to pane "com.apple.preferences.displays"' -e 'end tell'

## Modify // Wifi Settings // <fn> w ##
fn - w : osascript -e 'tell application "System Preferences"' -e 'activate' -e 'set current pane to pane "com.apple.preferences.network"' -e 'end tell'

## Modify // Settings // <fn> c ##
fn - c : osascript -e 'tell application "System Preferences" to activate'

## Session // Logout // <fn><shift> e ##
fn + shift - e : osascript -e 'tell application "System Events" to log out'

## Session // Reload Yabai Config // <fn><shift> c ##
fn + shift - c : command "$HOME/.config/yabai/yabairc"

## Session // Restart Yabai // <fn><control> c ##
fn + ctrl - c : launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"

## Session // Reload Key Bindings // <fn><shift> r ##
fn + shift - r : skhd -r

## Session // Restart skhd // <fn><control> r ##
fn + ctrl - r : launchctl kickstart -k "gui/${UID}/homebrew.mxcl.skhd"

## Session // Reboot // <fn><shift> b ##
fn + shift - b : osascript -e 'tell app "loginwindow" to «event aevtrrst»'

## Session // Force Reboot // <fn><shift><control> b ##
fn + shift + ctrl - b : osascript -e 'tell app "System Events" to restart'

## Session // Sleep // <fn><shift> s ##
fn + shift - s : pmset sleepnow

## Session // Power Down // <fn><shift> p ##
fn + shift - p : osascript -e 'tell app "System Events" to shut down'

## Session // Lock Screen // <fn> esc ##
fn - escape : python -c 'import ctypes; ctypes.CDLL("/System/Library/PrivateFrameworks/login.framework/Versions/Current/login").SACLockScreenImmediate()'

## Navigate // Relative Window // <fn> k j h l ##
fn - h : yabai -m window --focus west
fn - j : yabai -m window --focus south
fn - k : yabai -m window --focus north
fn - l : yabai -m window --focus east

# ## Navigate // Relative Window // <fn> ↑ ↓ ← → ##
#fn - left  : yabai -m window --focus west
#fn - down  : yabai -m window --focus south
#fn - up    : yabai -m window --focus north
#fn - right : yabai -m window --focus east

# ## Navigate // Next Workspace // <fn><⌥> → ##
#fn + alt - right : yabai -m space --focus next
## Navigate // Next Workspace // <fn> Tab ##
fn - tab : yabai -m space --focus next

# ## Navigate // Previous Workspace // <fn><⌥> ← ##
#fn + alt - left : yabai -m space --focus prev
## Navigate // Previous Workspace // <fn><shift> Tab ##
fn + shift - tab : yabai -m space --focus prev

## Navigate // Workspaces 1-10 // <fn> 0..9 ##
# SIP only
fn - 1 : yabai -m space --focus  1
fn - 2 : yabai -m space --focus  2
fn - 3 : yabai -m space --focus  3
fn - 4 : yabai -m space --focus  4
fn - 5 : yabai -m space --focus  5
fn - 6 : yabai -m space --focus  6
fn - 7 : yabai -m space --focus  7
fn - 8 : yabai -m space --focus  8
fn - 9 : yabai -m space --focus  9
fn - 0 : yabai -m space --focus 10
## Navigate // Workspace 11 - 19 // <fn><control> 1..9 ##
fn + ctrl - 1 : yabai -m space --focus 11
fn + ctrl - 2 : yabai -m space --focus 12
fn + ctrl - 3 : yabai -m space --focus 13
fn + ctrl - 4 : yabai -m space --focus 14
fn + ctrl - 5 : yabai -m space --focus 15
fn + ctrl - 6 : yabai -m space --focus 16
fn + ctrl - 7 : yabai -m space --focus 17
fn + ctrl - 8 : yabai -m space --focus 18
fn + ctrl - 9 : yabai -m space --focus 19

## Modify // Window Swap // <fn><shift> k j h l ##
fn + shift - h : yabai -m window --swap west
fn + shift - j : yabai -m window --swap south
fn + shift - k : yabai -m window --swap north
fn + shift - l : yabai -m window --swap east

# ## Modify // Window Position // <fn><control> ↑ ↓ ← → ##
#fn + ctrl - left  : yabai -m window --warp west
#fn + ctrl - down  : yabai -m window --warp south
#fn + ctrl - up    : yabai -m window --warp north
#fn + ctrl - right : yabai -m window --warp east
## Modify // Window Position // <fn><control> k j h l ##
fn + ctrl - h : yabai -m window --warp west
fn + ctrl - j : yabai -m window --warp south
fn + ctrl - k : yabai -m window --warp north
fn + ctrl - l : yabai -m window --warp east

## Modify // Carry Window to Workspace 1 - 10 // <fn><⌥> 0..9 ##
fn + alt - 1 : yabai -m window --space  1 && yabai -m space --focus  1
fn + alt - 2 : yabai -m window --space  2 && yabai -m space --focus  2
fn + alt - 3 : yabai -m window --space  3 && yabai -m space --focus  3
fn + alt - 4 : yabai -m window --space  4 && yabai -m space --focus  4
fn + alt - 5 : yabai -m window --space  5 && yabai -m space --focus  5
fn + alt - 6 : yabai -m window --space  6 && yabai -m space --focus  6
fn + alt - 7 : yabai -m window --space  7 && yabai -m space --focus  7
fn + alt - 8 : yabai -m window --space  8 && yabai -m space --focus  8
fn + alt - 9 : yabai -m window --space  9 && yabai -m space --focus  9
fn + alt - 0 : yabai -m window --space 10 && yabai -m space --focus 10

## Modify // Carry Window to Workspace 11 - 19 // <fn><⌥><control> 1..9 ##
fn + alt + ctrl - 1 : yabai -m window --space 11 && yabai -m space --focus 11
fn + alt + ctrl - 2 : yabai -m window --space 12 && yabai -m space --focus 12
fn + alt + ctrl - 3 : yabai -m window --space 13 && yabai -m space --focus 13
fn + alt + ctrl - 4 : yabai -m window --space 14 && yabai -m space --focus 14
fn + alt + ctrl - 5 : yabai -m window --space 15 && yabai -m space --focus 15
fn + alt + ctrl - 6 : yabai -m window --space 16 && yabai -m space --focus 16
fn + alt + ctrl - 7 : yabai -m window --space 17 && yabai -m space --focus 17
fn + alt + ctrl - 8 : yabai -m window --space 18 && yabai -m space --focus 18
fn + alt + ctrl - 9 : yabai -m window --space 19 && yabai -m space --focus 19

## Modify // Move Window to Workspace 1 - 10 // <fn><shift> 0..9 ##
fn + shift - 1 : yabai -m window --space  1
fn + shift - 2 : yabai -m window --space  2
fn + shift - 3 : yabai -m window --space  3
fn + shift - 4 : yabai -m window --space  4
fn + shift - 5 : yabai -m window --space  5
fn + shift - 6 : yabai -m window --space  6
fn + shift - 7 : yabai -m window --space  7
fn + shift - 8 : yabai -m window --space  8
fn + shift - 9 : yabai -m window --space  9
fn + shift - 0 : yabai -m window --space 10

## Modify // Move Window to Workspace 11 - 19// <fn><control><shift> 1..9 ##
fn + ctrl + shift - 1 : yabai -m window --space 11
fn + ctrl + shift - 2 : yabai -m window --space 12
fn + ctrl + shift - 3 : yabai -m window --space 13
fn + ctrl + shift - 4 : yabai -m window --space 14
fn + ctrl + shift - 5 : yabai -m window --space 15
fn + ctrl + shift - 6 : yabai -m window --space 16
fn + ctrl + shift - 7 : yabai -m window --space 17
fn + ctrl + shift - 8 : yabai -m window --space 18
fn + ctrl + shift - 9 : yabai -m window --space 19

# Move Mode
:: move : echo "Move mode is live" ; spacebar -m config background_color  0xee990000

## Move // Enter Move Mode // <fn> m ##
fn - m ; move

## Move // Exit Move Mode // esc or return ##
move < hyper - escape ; default
move < return : echo "Exiting move mode"; skhd --key "hyper - escape"
move < escape : echo "Exiting move mode"; skhd --key "hyper - escape"

## Move // Move Window // k j h l ##
move < h : yabai -m window --move rel:-20:0
move < j : yabai -m window --move rel:0:20
move < k : yabai -m window --move rel:0:-20
move < l : yabai -m window --move rel:20:0

## Move // Move Window // ↑ ↓ ← → ##
move < left  : yabai -m window --move rel:-20:0
move < down  : yabai -m window --move rel:0:20
move < up    : yabai -m window --move rel:0:-20
move < right : yabai -m window --move rel:20:0

# Resize Mode
# TODO link background colour from spacebarrc somehow
:: default : spacebar -m config background_color     0xff202020
:: resize : echo "Resize mode is live" ; spacebar -m config background_color  0xee009900

## Resize // Enter Resize Mode // <fn> r ##
fn - r ; resize

## Resize // Exit Resize Mode // esc or return ##
resize < hyper - escape ; default
resize < return : echo "Exiting resize mode"; skhd --key "hyper - escape"
resize < escape : echo "Exiting resize mode"; skhd --key "hyper - escape"

## Resize // Resize Window // k j h l ##
resize < h : yabai -m window --resize left:-20:0  ; yabai -m window --resize right:-20:0
resize < j : yabai -m window --resize bottom:0:20 ; yabai -m window --resize top:0:20
resize < k : yabai -m window --resize top:0:-20   ; yabai -m window --resize bottom:0:-20
resize < l : yabai -m window --resize right:20:0  ; yabai -m window --resize left:20:0

## Resize // Resize Window // ↑ ↓ ← → ##
resize < left  : yabai -m window --resize left:-20:0  ; yabai -m window --resize right:-20:0
resize < down  : yabai -m window --resize bottom:0:20 ; yabai -m window --resize top:0:20
resize < up    : yabai -m window --resize top:0:-20   ; yabai -m window --resize bottom:0:-20
resize < right : yabai -m window --resize right:20:0  ; yabai -m window --resize left:20:0

## Resize // Window Gaps // + - ##
resize < shift - 0x18 : yabai -m space --gap rel:1
resize < 0x1B         : yabai -m space --gap rel:-1

## Resize // Balance Window Size // 0 ##
resize < 0 : yabai -m space --balance ; skhd --key "hyper - escape"

## Launch // Browser // <fn><shift> return ##
fn + shift - 0x4C : command open -n -a "Google Chrome" --args --new-window
# Kyria sends 'return_or_enter'
fn + shift - 0x24 : command open -n -a "Google Chrome" --args --new-window

## Launch // File Browser // <fn><shift> n ##
fn + shift - n : open -R ~

## Launch // Terminal // <fn> return ##
# 'fn - return' is kVK_ANSI_KeypadEnter = 0x4C
# TODO set alacritty to handle term:,ssh: URL schemes then use open -na term://
fn - 0x4C : open -n -a "Alacritty"
# Kyria sends 'return_or_enter'
fn - 0x24 : open -n -a "Alacritty"

## Modify // Window Floating Toggle // <fn><shift> space ##
fn + shift - space : yabai -m window --toggle float

## Modify // Window Fullscreen Toggle // <fn> f ##
fn - f : yabai -m window --toggle zoom-fullscreen

## Modify // Window Native Fullscreen Toggle // <fn><shift> f ##
fn + shift - f : yabai -m window --toggle native-fullscreen

## Session // Exit App // <fn><shift> q ##
# !!Currently does not close windows that are missing title bar(more so the WM buttons)
fn + shift - q : yabai -m window --close

## Session // Terminate App // <fn><⌥> q ##
fn + alt - q : command kill -KILL $(yabai -m query --windows --window | jq '.pid')

## Modify // Insert Next Window Vertically // <fn><shift> | ##
fn + shift - 0x2A : yabai -m window --insert east   # fn + shift - \ 
## Modify // Insert Next Window Horizontally // <fn> - ##
fn - 0x1B : yabai -m window --insert south  # fn - -

# ## Launch // This Dialog // <fn><shift> ? ##
#fn + shift - 0x2C : open -na "Google Chrome" --args --new-window --app="$($HOME/bin/skhd_parse.py -f data)"
#fn + shift - 0x2C : $HOME/bin/skhd_parse.py ; open -na "Google Chrome" --args --new-window --name="Key Bindings" --app="file://$HOME/.cache/skhd/skhd.html"
fn + shift - 0x2C : $HOME/bin/key_bindings_window.sh
